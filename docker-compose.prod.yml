version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: admin-dashboard-db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin_password
      POSTGRES_DB: admin_dashboard
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - admin-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d admin_dashboard"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Admin Dashboard Application
  admin-dashboard:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: admin-dashboard-app
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://admin:admin_password@postgres:5432/admin_dashboard?sslmode=disable
      - AUTH_SECRET=your-production-auth-secret-change-this
      - AUTH_URL=http://localhost:3000
      - GOOGLE_CLIENT_ID=your-google-client-id
      - GOOGLE_CLIENT_SECRET=your-google-client-secret
      - BLOB_READ_WRITE_TOKEN=your-blob-token
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - admin-network
    restart: unless-stopped

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: admin-dashboard-redis
    ports:
      - "6379:6379"
    networks:
      - admin-network
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  admin-network:
    driver: bridge